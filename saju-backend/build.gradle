plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "6.0.1.5171"
}

group = 'com.saju'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // ai
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // valid
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // WebSocket + STOMP
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MongoDB
    implementation ('org.springframework.boot:spring-boot-starter-data-mongodb')

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.projectKey", "saju"
        property "sonar.host.url", "http://i12a408.p.ssafy.io:8500"
        property "sonar.login", "sqa_03f6c1aef9ef7b6a3e0e5ac52248cb42f71af532"
    }
}